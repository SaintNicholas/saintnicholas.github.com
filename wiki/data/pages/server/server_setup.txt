====== Background ======

I wanted to run a webserver from a computer running Ubuntu Server at my house, and I wanted to use nickgoote.com to access the webserver.  I registered nickgoote.com with GoDaddy to get this done.  My end configuration is shown in the picture below.  I'll refer to this picture in later sections.

{{:server:serversetup.png|}}

====== Windows Machine Configuration ======

Make the Windows machine have a static IP.  In my case I wanted it to have an IP of 192.168.17.98.

====== Ubuntu Server Configuration ======

===== Package Installation =====

Then install and start the ssh server with: \\
<code>
sudo apt-get install openssh-server
</code>
<code>
sudo /etc/init.d/ssh start
</code>

Then install apache2 and php 5 with:
<code>
sudo apt-get install apache2
</code>
<code>
sudo apt-get install php5
</code>

===== Static IP =====

Make the Ubuntu Server have a static IP.  In my case I wanted it to have an IP of 192.168.17.99.  Do this by altering the /etc/network/interfaces file.  Modify: \\

From: \\
<code>
# The primary network interface
auto eth0
iface eth0 inet dhcp
</code>

To: \\
<code>
# The primary network interface
auto eth0
iface eth0 inet static
    address 192.168.17.99
    netmask 255.255.255.0
    network 192.168.17.0
    broadcast 192.168.17.255
    gateway 192.168.17.1
</code>

Then restart the adapter with: \\
<code>
sudo /etc/init.d/networking restart
</code>

===== DokuWiki Install =====

Then install DokuWiki into the webroot.  The webroot by default is at /var/www.  An example of how to do this is below.
<code>
cd /var/www
Open terminal
sudo wget http://www.splitbrain.org/_media/projects/dokuwiki/dokuwiki-2009-12-25c.tgz
sudo tar xvf dokuwiki-2009-12-25c.tgz
sudo mv dokuwiki-2009-12-25 wiki
sudo chown -R www-data:www-data /var/www/wiki
Go to http://localhost/dokuwiki/install.php in browser and follow directions
sudo /etc/init.d/apache2 restart to restart apache2
</code>

The chown command is based on the DokuWiki Ubuntu installation instructions.  It changes ownership of the /var/www/wiki files to the www-data user and www-data group.  It does not change the r/w/x permissions on any of the files.  This is fine for me because I run a local webserver, but is something to note.

Some dokuwiki folders should not be able to be accessed from the outside world.  Apache2 defaults to letting anyone read anything.  To change this, modify the /etc/apache2/sites-available/default file.  The change I made to not let anyone external see the data, conf, bin, or inc folders of dokuwiki is shown below.  This is recommended by the DokuWiki site.  This file can be modified in a similar way to deny access to any other folders as well.
<code>
<LocationMatch "/(data|conf|bin|inc)/">
Order allow,deny
Deny from all
</LocationMatch>
</code>

I don't like the default DokuWiki page layout.  In var/www/wiki/lib/tpl/default/layout.css I change .logo to float: left and .pagename to float: right to make the name/link of the wiki show up on the left side.  I also don't like the backlinks option, so I remove it following [[http://www.dokuwiki.org/backlinks|the DokuWiki description of how to]], except I remove the link instead of modifying it because I don't want it appearing at all.

===== Port Forwarding =====

I forward port 80 (http) and port 22 (ssh) to my Ubuntu server.  Port 80 is required so that the Ubuntu server gets http requests and can respond to them with my website, and port 22 is required so I can ssh into the Ubuntu Server from outside of my home.

===== ddclient =====

I use ddclient to update my ZoneEdit DNS A record.  Setting up ddclient was based on an Ubuntu [[https://help.ubuntu.com/community/DynamicDNS#ddclient|Tutorial]]

When installation was complete, my configuration was:
<code>
# Configuration file for ddclient generated by debconf
#
# /etc/ddclient.conf

# Update every 5 minutes (300 seconds)
daemon=300
pid=/var/run/ddclient.pid

# Don't use eth0 IP because we're on a LAN.  Instead use zoneedit's
# ip checking site
#use=if, if=eth0
use=web, web=dynamic.zoneedit.com/checkip.html, web-skip='IP Address'

protocol=zoneedit1
ssl=yes
server=dynamic.zoneedit.com
login=xxxxxxxxxx
password='xxxxxxxxxx'
nickgoote.com
</code>

===== CrashPlan =====

[[http://example.com|CrashPlan]] is a backup utility.  I use it in my system to back up my webserver from my Ubuntu Server to my Windows machine.  Crashplan must be [[http://www.unixmen.com/linux-tutorials/290-install-crashplan-backup-tool-in-linux-|installed]] on the Ubuntu Server and then installed on the Windows machine.

The Ubuntu Server CrashPlan is considered a headless installation, and must be configured using the Windows machine GUI.  The CrashPlan website describes how to do the [[http://support.crashplan.com/doku.php/how_to/%20configure_a_headless_client|configuration]] of the Ubuntu Server CrashPlan installation from the Windows machine.

====== DNS Configuration ======

===== ZoneEdit =====

I used www.ZoneEdit.com for my DNS configuration.  It's free, and is has worked really well so far.  My DNS configuration is shown below.

{{:server:serverdns.png?454x416|}}

The A record points my domain, nickgoote.com, to my current IP address, 68.40.8.204.  This is my Comcast given dynamic IP address, which needs to be updated occasionally.  To update it, I used ddclient from the Ubuntu Server, which I'll discuss later.

The CNAME record for subdomain www makes www.nickgoote.com direct to the same IP address that nickgoote.com directs to.

The CNAME record for subdomain webmail directs webmail.nickgoote.com to the GoDaddy provided email address I have, and accesses it through webmail.  The webmail.secureserver.net I got from the GoDaddy DNS setup that was provided with the domain.

The two MX records are for my GoDaddy provided email address.  They control where email goes when someone emails X@nickgoote.com.  The hosts entered I got from the GoDaddy DNS setup that was provided with the domain.

The two NS records I'm not 100% sure about.  They appear to add the A, CNAME, and MX records to the ns4.zoneedit.com and ns13.zoneedit.com ZoneEdit nameservers.  The setup requires there to be at least 2 NS records, but any more than 2 costs money.

===== GoDaddy =====

Once ZoneEdit is configured, you need to point GoDaddy to the ZoneEdit nameservers that were specified by the NS records.  This makes requests for nickgoote.com, www.nickgoote.com, and webmail.nickgoote.com look at the ZoneEdit nameservers.