
<p>
<a href="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml" class="urlextern" title="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml"  rel="nofollow">http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml</a>
</p>

<p>
File Names <br/>

Filenames should be all lowercase and can include underscores (_) or dashes (-)
</p>

<p>
Type Names <br/>

Type names start with a capital letter and have a capital letter for each new word, with no underscores: MyExcitingClass, MyExcitingEnum.
</p>

<p>
Variable Names <br/>

Variable names are all lowercase, with underscores between words. Class member variables have trailing underscores. For instance: my_exciting_local_variable, my_exciting_member_variable_.
</p>

<p>
Constant Names <br/>

Use a k followed by mixed case: kDaysInAWeek.
</p>

<p>
Function Names <br/>

Regular functions have mixed case, accessors and mutators match the name of the variable: MyExcitingFunction(), MyExcitingMethod(), my_exciting_member_variable(), set_my_exciting_member_variable().
</p>

<p>
Enumerator Names <br/>

Enumerators should be named either like constants or like macros: either kEnumName or ENUM_NAME.
</p>

<p>
Macro Names <br/>

You&#039;re not really going to define a macro, are you? If you do, they&#039;re like this: MY_MACRO_THAT_SCARES_SMALL_CHILDREN.
</p>

<p>
Spaces vs Tabs <br/>

Use only spaces, and indent 2 spaces at a time.
</p>

<p>
Function Calls <br/>

One line if it&#039;s under the 80 character limit, else: <br/>

bool retval = DoSomething(argument1, <br/>

</p>
<pre class="code">                        argument2, \\
                        argument3, \\
                        argument4); \\</pre>

<p>

Conditionals: <br/>

if (condition) {  <em> no spaces inside parentheses <br/>

  …  </em> 2 space indent. <br/>

} else {  <em> The else goes on the same line as the closing brace. <br/>

  … <br/>

} <br/>


</p>
